<?xml version="1.0" encoding="UTF-8"?>
<MetaInfo version="2.0">
  <Object id="nexacro.ExternalAPI">
    <ObjectInfo inheritance="" classname="nexacro.ExternalAPI" shorttypename="ExternalAPI" csstypename="ExternalAPI" csscontrolname="" group="Object" subgroup="Object" csspseudo="" container="false" composite="false" tabstop="false" cssstyle="false" contents="false" formats="false" contentseditor="" defaultwidth="false" defaultheight="false" registration="allow" edittype="" useinitvalue="false" popup="false" edittypecomponent="" dblclickevent="" requirement="Android nexacro Browser,iOS nexacro Browser" description="It enables connection with an external device (or an external module or app) and execution of the device" />
    <PropertyInfo>
      <Property name="id" group="Information" subgroup="" refreshinfo="" edittype="ID" readonly="true" initonly="true" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="true" mandatory="true" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Android nexacro Browser,iOS nexacro Browser" description="This property is used to set the identification of a ExternalAPI." csspropertyname="" csselementname="" normalpropertyname="id" />
      <Property name="name" group="Information" subgroup="" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Android nexacro Browser,iOS nexacro Browser" description="This property is used to specify the name of a ExternalAPI." csspropertyname="" csselementname="" normalpropertyname="name" />
    </PropertyInfo>
    <CSSInfo>
      <PropertyInfo />
    </CSSInfo>
    <StatusInfo />
    <ControlInfo />
    <MethodInfo>
      <Method name="addEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="IE8,IE9,IE10,IE11,Chrome,Safari,Firefox,Opera,Windows nexacro Browser,Android nexacro Browser,iOS nexacro Browser" description="This method is used to find a function and add it to a certain event of a ExternalAPI as a handler.">
        <Syntax text="ExternalAPI.addEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that has been added to the event by this method.&#xA;If the same handler already exists, it will return the index of the existing handler.&#xA;If it fails to add a handler successfully, it will return -1." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="A scope in which you search for the handler function&#xA;If this method fails to find the function in a specified scope, it will then search the regions at higher levels." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that the handler will be added to" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="A string that represents the name of a handler function to add" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="clearEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="IE8,IE9,IE10,IE11,Chrome,Safari,Firefox,Opera,Windows nexacro Browser,Android nexacro Browser,iOS nexacro Browser" description="This method is used to delete all the event handlers registered in a certain event.">
        <Syntax text="ExternalAPI.clearEventHandler( strEventID )">
          <Return type="Number" description="It returns the number of deleted event handler functions." />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event, all of whose handlers will be deleted" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="execExtAPI" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="It is a method to run external module API of selected ID on a mobile device.">
        <Syntax text="ExternalAPI.execExtAPI(strRecvID, strApplicationID, strAPI[, strParams])">
          <Return type="Boolean" description="It returns false when strApplicationID or strAPI value is discarded or invalid text is used. Otherwise, it returns true for normal cases." />
          <Arguments>
            <Argument name="strAPI" type="String" in="false" out="false" option="false" variable="false" description="Name of API to call" />
            <Argument name="strApplicationID" type="String" in="false" out="false" option="false" variable="false" description="ID of application to call" />
            <Argument name="strParams" type="String" in="false" out="false" option="false" variable="false" description="Assign factor of API to call. Each factor is distinguished by a blank.&#xD;&#xA;If a blank is included in the value of factor, use (single quotation marks) to show a block." />
            <Argument name="strRecvID" type="String" in="false" out="false" option="false" variable="false" description="Target ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="findEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="IE8,IE9,IE10,IE11,Chrome,Safari,Firefox,Opera,Windows nexacro Browser,Android nexacro Browser,iOS nexacro Browser" description="This method finds a handler in a certain event of a ExternalAPI and returns the index of the handler.">
        <Syntax text="ExternalAPI.findEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that you intend to find.&#xA;If it fails to find the handler, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="The handler function to find" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you will search to find the handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="getEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="This method returns a specific handler from a certain event of a ExternalAPI by specifying the index number of the handler.">
        <Syntax text="ExternalAPI.getEventHandler( strEventID, nIdx )">
          <Return type="Object" description="It returns the object of an event handler whose index number is specified. &#xA;If there is no handler for the specified index number, it will return &quot;null&quot;." />
          <Arguments>
            <Argument name="nIdx" type="Number" in="false" out="false" option="false" variable="false" description="The index number of the event handler you want to find&#xA;The index number begins from 0." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you search for your sought handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="isAccessible" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="It is a method to check whether it is approachable with a selected application ID information on a mobile device.">
        <Syntax text="ExternalAPI.isAccessible (strApplicationID)">
          <Return type="Boolean" description="It returns false when strApplicationID is discarded or invalid text is used for ID. Otherwise, it returns true for normal cases." />
          <Arguments>
            <Argument name="strApplicationID" type="String" in="false" out="false" option="false" variable="false" description="ID of application to check the approach&#xD;&#xA;Android : use the domain format - e.g.) &quot;com.tobesoft.nexacroplatform.testmodule&quot;&#xD;&#xA;iOS : use the URL Scheme format - e.g.) &quot;TobesoftTestApp://&quot;" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="IE8,IE9,IE10,IE11,Chrome,Safari,Firefox,Opera,Windows nexacro Browser,Android nexacro Browser,iOS nexacro Browser" description="This method is used to remove a handler in a certain event of a ExternalAPI.">
        <Syntax text="ExternalAPI.removeEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="If it succeeds in removing the handler, it will return 1.&#xA;Otherwise, it will return 0." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function to remove" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="IE8,IE9,IE10,IE11,Chrome,Safari,Firefox,Opera,Windows nexacro Browser,Android nexacro Browser,iOS nexacro Browser" description="This method is used to find a handler in a certain event of a ExternalAPI and remove it.">
        <Syntax text="ExternalAPI.removeEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="If it succeeds in removing the handler, it will return 1.&#xA;Otherwise, it will return 0." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid&#xA;If this method fails to find the handler in a specified scope, it will then search the regions at higher levels." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you will search to find the handler" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="A string that represents the name of a handler function to remove" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="IE8,IE9,IE10,IE11,Chrome,Safari,Firefox,Opera,Windows nexacro Browser,Android nexacro Browser,iOS nexacro Browser" description="This method is used to change the first handler in a certain event of a ExternalAPI.">
        <Syntax text="ExternalAPI.setEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="If it succeeds in changing the first handler, it will return 0.&#xA;Otherwise, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function that will replace the existing handler" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the new handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the existing handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="IE8,IE9,IE10,IE11,Chrome,Safari,Firefox,Opera,Windows nexacro Browser,Android nexacro Browser,iOS nexacro Browser" description="This method finds a function and uses it to replace the first handler in a certain event of a ExternalAPI.">
        <Syntax text="ExternalAPI.setEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="If it succeeds in changing the first handler, it will return 0.&#xA;Otherwise, it will return -1." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="A scope in which you search for the new handler function&#xA;If this method fails to find the function in a specified scope, it will then search the regions at higher levels." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the existing handler" />
            <Argument name="strFunc" type="Object" in="false" out="false" option="false" variable="false" description="A string that represents the name of a function that will replace the existing handler" />
          </Arguments>
        </Syntax>
      </Method>
    </MethodInfo>
    <EventHandlerInfo>
      <EventHandler name="onerror" group="Event" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="This event occurs when the access to an external module designated by a mobile device fails.">
        <Syntax text="ExternalAPI.onerror(obj:nexacro.ExternalAPI,e:nexacro.ExternalAPIErrorEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="ExternalAPIErrorEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onrecvdata" group="Event" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="It is an event that occurs when accessing the selected external module fails by using isAccessible on a mobile device.">
        <Syntax text="ExternalAPI.onrecvdata(obj:nexacro.ExternalAPI,e:nexacro.ExternalAPIEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="ExternalAPIEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onsuccess" group="Event" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="It is an event that occurs when selected external module is approachable upon called with isAccessible.">
        <Syntax text="ExternalAPI.onsuccess(obj:nexacro.ExternalAPI,e:nexacro.ExternalAPIEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="ExternalAPIEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
    </EventHandlerInfo>
  </Object>
</MetaInfo>
