<?xml version="1.0" encoding="UTF-8"?>
<MetaInfo version="2.0">
  <Object id="nexacro.ContactSet">
    <ObjectInfo inheritance="" classname="nexacro.ContactSet" shorttypename="ContactSet" csstypename="ContactSet" csscontrolname="" group="Object" subgroup="Object" csspseudo="" container="false" composite="false" tabstop="false" cssstyle="false" contents="false" formats="false" contentseditor="" defaultwidth="" defaultheight="" registration="allow" edittype="" useinitvalue="false" popup="false" edittypecomponent="" dblclickevent="" requirement="Android nexacro Browser,iOS nexacro Browser" description="It handles contact data of a mobile device." />
    <PropertyInfo>
      <Property name="id" group="Information" subgroup="" refreshinfo="" edittype="ID" readonly="true" initonly="true" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="true" mandatory="true" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Android nexacro Browser,iOS nexacro Browser" description="This property is used to set the identification of a ContactSet." csspropertyname="" csselementname="" normalpropertyname="id" />
      <Property name="name" group="Information" subgroup="" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Android nexacro Browser,iOS nexacro Browser" description="This property is used to specify the name of a ContactSet." csspropertyname="" csselementname="" normalpropertyname="name" />
      <Property name="parent" group="Hidden" subgroup="" refreshinfo="" edittype="Object" readonly="true" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Android nexacro Browser,iOS nexacro Browser" description="This read-only property holds the parent object of a ContactSet." csspropertyname="" csselementname="" normalpropertyname="parent" />
    </PropertyInfo>
    <CSSInfo>
      <PropertyInfo />
    </CSSInfo>
    <StatusInfo />
    <ControlInfo />
    <MethodInfo>
      <Method name="addEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="This method is used to add a handler to a certain event of a ContactSet.">
        <Syntax text="ContactSet.addEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that has been added to the event by this method.&#xA;If the same handler already exists, it will return the index of the existing handler.&#xA;If it fails to add a handler successfully, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function to add" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="true" out="true" option="true" variable="true" description="The ID of an event that the handler will be added to" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="addEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="This method is used to find a function and add it to a certain event of a ContactSet as a handler.">
        <Syntax text="ContactSet.addEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that has been added to the event by this method.&#xA;If the same handler already exists, it will return the index of the existing handler.&#xA;If it fails to add a handler successfully, it will return -1." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="A scope in which you search for the handler function&#xA;If this method fails to find the function in a specified scope, it will then search the regions at higher levels." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that the handler will be added to" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="A string that represents the name of a handler function to add" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="append" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="To add contact point data of mobile device.">
        <Syntax text="ContactSet.append(objContact)">
          <Return type="Boolean" description="If objContact is omitted or it is not Contact Object, it shall return false and if not, it shall return true." />
          <Arguments>
            <Argument name="objContact" type="Object" in="false" out="false" option="false" variable="false" description="Contact information to add (object Contact)" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="clearEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="This method is used to delete all the event handlers registered in a certain event.">
        <Syntax text="ContactSet.clearEventHandler( strEventID )">
          <Return type="Number" description="It returns the number of deleted event handler functions." />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event, all of whose handlers will be deleted" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="findEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="This method finds a handler in a certain event of a ContactSet and returns the index of the handler.">
        <Syntax text="ContactSet.findEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that you intend to find.&#xA;If it fails to find the handler, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="The handler function to find" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you will search to find the handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="getEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="This method returns a specific handler from a certain event of a ContactSet by specifying the index number of the handler.">
        <Syntax text="ContactSet.getEventHandler( strEventID, nIdx )">
          <Return type="Object" description="It returns the object of an event handler whose index number is specified. &#xA;If there is no handler for the specified index number, it will return &quot;null&quot;." />
          <Arguments>
            <Argument name="nIdx" type="Number" in="false" out="false" option="false" variable="false" description="The index number of the event handler you want to find&#xA;The index number begins from 0." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you search for your sought handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="query" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="It is a method to search matching data from contacts information in mobile devices.">
        <Syntax text="ContactSet.query( strQueryInfo [, nResultCnt] )">
          <Return type="Boolean" description="If strQueryInfo is omitted or unusable letters are input or if unusable numbers or letters for nResultCnt are input, it shall return false. Otherwise, it shall return true." />
          <Arguments>
            <Argument name="nResultCnt" type="Number" in="false" out="false" option="false" variable="false" description="Number of contacts to return during searching  &#xA;In case of -1, there is no limit." />
            <Argument name="strQueryInfo" type="String" in="false" out="false" option="false" variable="false" description="It supports reference conditional sentences and wild card characters. (‘?’, ‘*’ )" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="remove" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="To delete contact point data of mobile device.">
        <Syntax text="ContactSet.remove(strUniqueID)">
          <Return type="Boolean" description="If objContact is omitted or it is not Contact Object, it shall return false and if not, it shall return true." />
          <Arguments>
            <Argument name="strUniqueID" type="String" in="false" out="false" option="false" variable="false" description="Contact information to delete. uniqueid value of Contract Object." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="This method is used to remove a handler in a certain event of a ContactSet.">
        <Syntax text="ContactSet.removeEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="If it succeeds in removing the handler, it will return 1.&#xA;Otherwise, it will return 0." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function to remove" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="This method is used to find a handler in a certain event of a ContactSet and remove it.">
        <Syntax text="ContactSet.removeEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="If it succeeds in removing the handler, it will return 1.&#xA;Otherwise, it will return 0." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid&#xA;If this method fails to find the handler in a specified scope, it will then search the regions at higher levels." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you will search to find the handler" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="A string that represents the name of a handler function to remove" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="This method is used to change the first handler in a certain event of a ContactSet.">
        <Syntax text="ContactSet.setEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="If it succeeds in changing the first handler, it will return 0.&#xA;Otherwise, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function that will replace the existing handler" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the new handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the existing handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="true" requirement="" description="This method finds a function and uses it to replace the first handler in a certain event of a ContactSet.">
        <Syntax text="ContactSet.setEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="If it succeeds in changing the first handler, it will return 0.&#xA;Otherwise, it will return -1." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="A scope in which you search for the new handler function&#xA;If this method fails to find the function in a specified scope, it will then search the regions at higher levels." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the existing handler" />
            <Argument name="strFunc" type="Object" in="false" out="false" option="false" variable="false" description="A string that represents the name of a function that will replace the existing handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="update" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="To update contact point data of mobile device.">
        <Syntax text="ContactSet.update(objContact)">
          <Return type="Boolean" description="If objContact is omitted or it is not a Contact object, it shall return false. Otherwise, it shall return true." />
          <Arguments>
            <Argument name="objContact" type="Object" in="false" out="false" option="false" variable="false" description="Contact information to update (Contact object)" />
          </Arguments>
        </Syntax>
      </Method>
    </MethodInfo>
    <EventHandlerInfo>
      <EventHandler name="onerror" group="" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="This event occurs when a mobile device fails to process information related to contacts.">
        <Syntax text="ContactSet.onerror(obj:nexacro.ContactSet,e:nexacro.ContactSetErrorEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="ContactSetErrorEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onsuccess" group="" deprecated="false" unused="false" requirement="Android nexacro Browser,iOS nexacro Browser" description="It is Event to occur when treatment of contact points data is successful in mobile device.">
        <Syntax text="ContactSet.onsuccess(obj:nexacro.ContactSet,e:nexacro.ContactSetEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="ContactSetEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
    </EventHandlerInfo>
  </Object>
</MetaInfo>
